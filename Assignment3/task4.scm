(include "book-queue.scm")
(include "wire.scm")
(include "and-gate.scm")
(include "or-gate.scm")
(include "inverter.scm")
(include "adders.scm")


(define add1 full-adder)
; (full-adder a b c-in sum c-out)

(define (add4 X Y O cout)
    (define c1 (make-wire))
    (define c2 (make-wire))
    (define c3 (make-wire))

    (define x0 (car X))
    (define x1 (cadr X))
    (define x2 (caddr X))
    (define x3 (cadddr X))
    (define y0 (car Y))
    (define y1 (cadr Y))
    (define y2 (caddr Y))
    (define y3 (cadddr Y))
    (define o0 (car O))
    (define o1 (cadr O))
    (define o2 (caddr O))
    (define o3 (cadddr O))

    (add1 x0 y0 0 o0 c1)
    (add1 x1 y1 c1 o1 c2)
    (add1 x2 y2 c2 o2 c3)
    (add1 x3 y3 c3 o3 cout)
)


(set! the-agenda (make-agenda))
(set! and-delay 5)
(set! or-delay 3)
(set! inverter-delay 1)
(define in0 (make-wire))
(define in1 (make-wire))
(define out0 (make-wire))
(define out1 (make-wire))
(define out2 (make-wire))
(define out3 (make-wire))
(define carry (make-wire))
(inspect (add4
    (list in0 in0 in0 in0)
    (list in1 in1 in1 in1)
    (list out3 out2 out1 out0)
    carry
    ))
(inspect (set-signal! in0 1))
(inspect (set-signal! in1 1))
(inspect (propagate))
(inspect (get-signal carry))